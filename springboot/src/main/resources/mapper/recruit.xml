<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.recruit.model.mapper.RecruitMapper">
	<resultMap type="recruitDto" id="article">
		<result column="article_id" property="articleId"/>
		<result column="user_id" property="userId"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="hit" property="hit"/>
		<result column="register_time" property="registerTime"/>
		<result column="plan_id" property="planId"/>
		<result column="type" property="type"/>
		<result column="likes" property="likes"/>
	</resultMap>
	
	<resultMap type="recruitDto" id="viewArticle" extends="article">
		<collection property="fileInfos" column="article_id" javaType="list" ofType="fileInfoDto" select="fileInfoList"/>
<!-- 		<collection property="plans" column="article_id" javaType="list" ofType="planDto" select="planList"/> -->
		<collection property="comments" column="article_id" javaType="list" ofType="commentDto" select="commentList"/>
	</resultMap>
	
	<resultMap type="fileInfoDto" id="file">
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>
	
	<resultMap type="planDto" id="plan">
		<result column="plan_id" property="planId"/>
		<result column="plan_name" property="planName"/>
		<result column="user_id" property="userId"/>
		<result column="friend_list_id" property="friendListId"/>
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="isOpen" property="isOpen"/>
		<result column="content" property="content"/>
	</resultMap>
	
	<resultMap type="commentDto" id="comment">
		<result column="comment_id" property="commentId"/>
		<result column="content" property="content"/>
		<result column="user_id" property="userId"/>
		<result column="register_time" property="registerTime"/>
		<result column="article_id" property="articleId"/>
		<result column="parent" property="parent"/>
		<result column="depth" property="depth"/>
		<result column="group_no" property="groupNo"/>
		<result column="category" property="category"/>
	</resultMap>
	
	<resultMap type="tripDto" id="trip">
		<result column="trip_id" property="tripId"/>
		<result column="plan_id" property="planId"/>
		<result column="trip_no" property="tripNo"/>
		<result column="content_id" property="contentId"/>
	</resultMap>
	
	<insert id="writeArticle" parameterType="RecruitDto">
  INSERT INTO recruits (`user_id`, `title`, `content`)
  VALUES (#{userId}, #{title}, #{content})
  <selectKey resultType="int" keyProperty="articleId" order="AFTER">
    SELECT LAST_INSERT_ID()
  </selectKey>
</insert>

	<insert id="writePlan" parameterType="map">
		insert into recruits_plans_list (article_id, plan_id)
		values (#{articleId}, #{planId})
	</insert>

	
	<insert id="registerFile" parameterType="boardDto">
		insert into file_info (article_no, save_folder, original_file, save_file, category)
		values
		<foreach collection="fileInfos" item="fileinfo" separator=" , ">
			(#{articleId}, #{fileinfo.saveFolder}, #{fileinfo.originalFile}, #{fileinfo.saveFile}, 3)
		</foreach>
	</insert>
	
	<sql id="search">
		<if test="word != null and word != ''">
			<if test="key == 'title'">
				and title like concat('%', #{word}, '%')
			</if>
			<if test="key != 'title'">
				and ${key} = #{word}
			</if>
		</if>
	</sql>
	
	<select id="listArticle" parameterType="map" resultMap="article">
		select article_id, user_id, title, content, hit, register_time, type, likes
		from recruits
		<where>
			<include refid="search"></include>
		</where>
		order by article_id desc
		limit #{start}, #{listsize}
	</select>
	
	<select id="getTotalArticleCount" parameterType="map" resultType="int">
		select count(article_id)
		from recruits
		<where>
			<include refid="search"></include>
		</where>
	</select>
	
	<!-- getArticle START -->
	<select id="getArticlePlanId" parameterType="int" resultType="int">
		select plan_id
		from recruits_plans_list
		where article_id = #{articleNo};
	</select>
	
	<select id="commentList" parameterType="int" resultMap="comment">
		select *
		from comments
		where article_id = #{articleId} and category = 3
	</select>
	
	<select id="planList" parameterType="int" resultMap="plan">
		select *
		from plans
		where plan_id in 
		<foreach collection="planIds" item="planId"  open="(" separator="," close=")">
			#{planId} 
		</foreach>
		
	</select>
	
	<select id="getArticle" parameterType="int" resultMap="viewArticle">
		select article_id, user_id, title, content, hit, register_time 
		from recruits
		where article_id = #{articleNo}
	</select>
	<!--  getArticle END -->
	
	<select id="fileInfoList" resultMap="file">
		select save_folder, original_file, save_file
		from file_info
		where article_no = #{articleId} and category = 3
	</select>
	
	<update id="updateHit" parameterType="int">
		update recruits
		set hit = hit + 1
		where article_id = #{articleId}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from recruits
		where article_id = #{articleId}
	</delete>
	
	<delete id="deleteFile" parameterType="int">
		delete from file_info
		where article_no = #{articleNo} and category = 3
	</delete>
	
	<update id="update" parameterType="recruitDto">
		update recruits
		set title = #{title}, content = #{content}
		where article_id = #{articleId}
	</update>
	
	<!-- getPlanList START -->
	<select id="getPlanList" parameterType="map" resultMap="plan">
		select plan_id, plan_name, user_id, content, friend_list_id, date_format(start_date,'%y.%m.%d')start_date, date_format(end_date,'%y.%m.%d')end_date, isOpen 
		from plans
		where user_id = #{userId}
		
			<include refid="search"></include>
		
		order by plan_id desc
		limit #{start}, #{listsize}
	</select>
	<!-- getPlanList END -->
	
	<!-- viewPlan START -->
	<select id="viewPlan" parameterType="int" resultMap="trip">
		select *
		from trip
		where plan_id = #{planId}
	</select>
	<!-- viewPlan END -->
	
	<!-- registPlan START -->
	<insert id="registPlan" parameterType="planDto">
		insert into plans (plan_name, user_id, memo_id, friend_list_id, start_date, end_date, isOpen)
		values ( #{planName}, #{userId}, #{memoId}, #{friendListId}, #{startDate}, #{endDate}, #{isOpen})
		<selectKey keyProperty="planId" resultType="int" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="registTrip" parameterType="tripDto">
		insert into trip (plan_id, trip_no, content_id)
		values
		<foreach collection="trips" item="trip" separator=" , ">
			(#{planId}, #{trip.tripNo}, #{trip.contentId})
		</foreach> 
	</insert>
	<!-- registPlan END -->
	
	
	<!-- like START -->
		<select id="likeCheck" resultType="boolean" parameterType="map">
	    SELECT 
	        CASE WHEN COUNT(*) > 0 THEN TRUE ELSE FALSE END
	    FROM 
	        likes
	    WHERE 
	        article_id = #{articleNo} AND user_id = #{userId} AND article_category = 3
	</select>
	
	<insert id="addLike">
	    insert into likes (article_category, article_id, user_id)
	    values (1, #{articleNo}, #{userId})
  	</insert>
  	
  	<update id="boardLike">
	    update recruits set likes = likes + 1 where article_id = #{articleNo}
	</update>
	
	<delete id="cancelLike" parameterType="map">
		DELETE FROM likes
		WHERE article_category = 3 AND article_id = #{articleNo} AND user_id = #{userId}
	</delete>
	
	<update id="cancelBoard" parameterType="map">
		UPDATE recruits
		SET likes = likes - 1
		WHERE article_id = #{articleNo}
	</update>
	<!-- like END -->
	
</mapper>